<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Download Statistics for Kenny Wang's npm Packages</title>
  <meta name="description" content="NPM download statistics for Kenny Wang's opens source projects for the past year. Updated Daily.">
  <meta property="og:title" content="Download Statistics for Kenny Wang's npm Packages">
  <meta property="og:description" content="NPM download statistics for Kenny Wang's opens source projects for the past year. Updated Daily.">
  <meta property="og:image" content="https://wangchujiang.com/my-npm-stat/og.jpg">
  <meta property="og:image:alt" content="Download Statistics for Kenny Wang's npm Packages">
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://wangchujiang.com/my-npm-stat">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="Download Statistics for Kenny Wang's npm Packages">
  <meta name="twitter:description" content="NPM download statistics for Kenny Wang's opens source projects for the past year. Updated Daily.">
  <meta name="twitter:image" content="https://wangchujiang.com/my-npm-stat/og.jpg">
  <meta name="twitter:image:alt" content="Download Statistics for Kenny Wang's npm Packages">
  <link rel="stylesheet" href="style.css">
  <link rel="stylesheet" href="./uPlot.min.css">
</head>
<body>
  <a href="https://github.com/jaywcjlove/my-npm-stat" target="_blank" class="github-corner">
    <svg viewBox="0 0 250 250">
      <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z" fill="#ffffffb0"></path>
      <path class="octo-arm" fill="currentColor" style="transform-origin: 130px 106px;" d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"></path>
      <path fill="currentColor" class="octo-body" d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"></path>
    </svg>
  </a>
  <main>
    <header>
      <div>
        <a href="https://github.com/jaywcjlove/" target="_blank">
          <img src="https://github.com/jaywcjlove.png" alt="Kenny Wang">
        </a>
        <h1>Download Statistics for <a target="_blank" href="https://github.com/jaywcjlove/">Kenny Wang</a>'s <a href="https://www.npmjs.com/~wcjiang">npm</a> Packages</h1>
      </div>
      <article>
        <a href=""><%= downloads.totalDownloads.toLocaleString() %></a><sub>pre year</sub>
      </article>
      <p>All data comes directly from npm.</p>
    </header>
    <h2>Downloads per day</h2>
    <div id="preDay" class="chart"></div>
    <h2>Downloads per week</h2>
    <div id="preWeekly" class="chart"></div>
    <h2>Downloads per month</h2>
    <div id="preMonth" class="chart"></div>
    <h2>Total number of downloads between <%= firstDate %> and <%= lastDate %>:</h2>
    <table class="packages">
      <thead>
        <tr>
          <th width="23"></th>
          <th>name</th>
          <th>downloads</th>
        </tr>
      </thead>
      <tbody>
        <% downloads.topPackages.forEach(function(data, idx) { %>
          <tr>
            <td><%=idx+1 < 10 ? `0${idx+1}` : idx+1%></td>
            <td><a target="_blank" href="https://npmjs.org/<%= data.name %>"><%= data.name %></a></td>
            <td><%= data.downloads.toLocaleString() %></td>
          </tr>
        <%})%>
        <tr>
          <td colspan="2"><a target="_blank" href="https://www.npmjs.com/~wcjiang">Total of <%= packages.length %> packages...</a></td>
          <td>=<a target="_blank" href="https://www.npmjs.com/~wcjiang"><%= downloads.totalDownloads.toLocaleString() %></a></td>
        </tr>
      </tbody>
    </table>
    <footer>
      <div class="time">Last cache created on <time datetime="<%=NOW_DATE%>"><%=NOW_DATE%></time></div>
      <article> Create by <a href="https://github.com/jaywcjlove" target="_blank">小弟调调™</a> All data comes directly from npm.</article>
    </footer>
  </main>
  <script src="./uPlot.iife.min.js"></script>
  <script>
    function formatDownloads(number) {
      if (number >= 1_000_000_000) {
        return (number / 1_000_000_000).toFixed(1) + 'B'; // 十亿
      } else if (number >= 1_000_000) {
        return (number / 1_000_000).toFixed(1) + 'M'; // 百万
      } else if (number >= 10_000) {
        return (number / 10_000).toFixed(1) + 'w'; // 万
      } else if (number >= 1_000) {
        return (number / 1_000).toFixed(1) + 'k'; // 千
      } else {
        return number.toString(); // 小于 1000 的情况
      }
    }
    const dom = document.getElementById("preDay");
    const getSize = () => ({ width: dom.offsetWidth - 10, height: 300 });
    const xAxes = { stroke: "#a1a1a1", grid: { stroke: "#333", width: 1 }, ticks: { stroke: "#333", width: 1 }, rotate: 25, space: 31 }
    const yAxes = { stroke: "#a1a1a1", grid: { stroke: "#333", width: 1 }, ticks: { stroke: "#333", width: 1 }, size: 65, values: (u, splits) => splits.map(v => formatDownloads(v)), space: 16 }
    const dataSeries = { label: "Date", value: (u, v) => v ? new Date(v*1000).toLocaleDateString() : "-"}
    const downloadsSeries = { label: "Downloads", value: (u, v) => v, stroke: "#8989ff", width: 1/devicePixelRatio, fill: "rgb(34 255 0 / 10%)" }
    const options = {
      width: 1920,
      height: 300,
      ...getSize(),
      // 禁用拖拽放大
      cursor: {
          drag: { x: false, y: false },
          // 可选：可以在这里配置光标样式和交互
          lock: false, // 如果希望锁定光标
      },
      series: [ dataSeries, downloadsSeries ],
      axes: [ xAxes, yAxes ]
    }
    const dayData = JSON.parse(`<%- JSON.stringify(downloads.dailyDownloads) %>`);
    var times = Object.keys(dayData).map(time =>  Date.parse(`${time} 00:00:00 UTC`)/1000);
    var values = Object.keys(dayData).map(time => dayData[time]);
    const uDay = new uPlot(options, [ times, values ], dom);

    const weeklyData = JSON.parse(`<%- JSON.stringify(downloads.weeklyDownloads) %>`);
    var times = Object.keys(weeklyData).map((time, index) => index);
    var values = Object.keys(weeklyData).map(time => weeklyData[time]);
    var optionsWeekly = {
      ...options,
      series: [ { label: "Date", value: (u, v) => Object.keys(weeklyData)[v] }, downloadsSeries ],
      scales: { x: { time: false }, },
      axes: [
        {
          ...xAxes,
          values: (u, splits) => splits.map((v, index) => Object.keys(weeklyData)[index])
        },
        {
          ...yAxes,
          values: (u, splits) => splits.map(v => formatDownloads(v))
        }
      ]
    }
    const uWeekly = new uPlot(optionsWeekly, [ times, values ], document.getElementById("preWeekly"));

    const monthlyData = JSON.parse(`<%- JSON.stringify(downloads.monthlyDownloads) %>`);
    var times = Object.keys(monthlyData).map(time =>  Date.parse(`${time} 00:00:00 UTC`)/1000);
    var values = Object.keys(monthlyData).map(time => monthlyData[time]);
    const uMonthly = new uPlot(options, [ times, values ], document.getElementById("preMonth"));

    window.addEventListener("resize", e => {
      uDay.setSize(getSize());
      uWeekly.setSize(getSize());
      uMonthly.setSize(getSize());
    });
  </script>
</body>
</html>
